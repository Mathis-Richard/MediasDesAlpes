openapi: 3.0.0
info:
  title: MediasAlpes
  version: '1.0'
  description: Medias des Alpes
  contact:
    name: Mathis
servers:
  - url: 'http://localhost:9191'
paths:
  '/medias/{idMedia}':
    parameters:
      - schema:
          type: integer
        name: idMedia
        in: path
        required: true
    get:
      summary: Récupère un média par son ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-media-by-id
      description: ''
      tags:
        - medias
    patch:
      summary: Effectue des changements à un média avec ID spécifique
      operationId: patch-media-by-id
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
      tags:
        - medias
      description: ''
    delete:
      summary: Supprimer un média de la base par son ID
      operationId: delete-media-by-id
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      tags:
        - medias
  /medias:
    get:
      summary: Récupère tous les médias
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
        '500':
          description: Internal Server Error
      operationId: get-media
      tags:
        - medias
    parameters: []
    post:
      summary: Récupère les médias dans la limite d'un nombre passé
      operationId: post-medias-with-limits
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                page:
                  type: integer
      tags:
        - medias
  /medias/new:
    post:
      summary: Crée un nouveau média
      operationId: post-new-media
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Media'
  /medias/classement:
    get:
      summary: Récupère le classement des médias
      tags:
        - medias
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
            application/xml:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    media:
                      type: string
      operationId: get-medias-classement
  /utilisateurs:
    parameters: []
    get:
      summary: Récupère tous les utilisateurs
      operationId: get-utilisateurs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utilisateur'
        '500':
          description: Internal Server Error
      tags:
        - utilisateurs
    post:
      summary: Récupère tous les utilisateurs dans la limite d'un nombre passé
      operationId: post-utilisateurs-with-limit
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Utilisateur'
        '400':
          description: Bad Request
      description: ''
      tags:
        - utilisateurs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                page:
                  type: integer
  '/utilisateurs/{emailUtilisateur}':
    parameters:
      - schema:
          type: string
        name: emailUtilisateur
        in: path
        required: true
    get:
      summary: Récupère un utilisateur par son email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utilisateur'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-utilisateur-by-email
      tags:
        - utilisateurs
    patch:
      summary: Met à jour un utilisateur par son email
      operationId: patch-utilisateur-by-email
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utilisateur'
      tags:
        - utilisateurs
    delete:
      summary: Supprime un utilisateur par son email
      operationId: delete-utilisateur-by-email
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      tags:
        - utilisateurs
  /utilisateurs/new:
    parameters: []
    post:
      summary: Enregistre un nouvel utilisateur
      operationId: post-new-utilisateur
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utilisateur'
      tags:
        - utilisateurs
  /types:
    get:
      summary: Récupère tous les types de médias
      tags:
        - typegenremedia
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TypeMedia'
      operationId: get-types
  /genres:
    get:
      summary: Récupère tous les genres de médias
      tags:
        - typegenremedia
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenreMedia'
      operationId: get-genres
    parameters: []
  '/exemplaires/add/{idMedia}':
    parameters:
      - schema:
          type: string
        name: idMedia
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - exemplaires
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      operationId: get-new-exemplaire
  '/exemplaires/del/{idExemplaire}':
    parameters:
      - schema:
          type: string
        name: idExemplaire
        in: path
        required: true
    delete:
      summary: ''
      operationId: delete-exemplaire-by-id
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      tags:
        - exemplaires
  /auteurs:
    get:
      summary: Récupère les auteurs
      tags:
        - auteurs
      responses: {}
      operationId: get-auteurs
    parameters: []
  '/auteurs/{idAuteur}':
    parameters:
      - schema:
          type: string
        name: idAuteur
        in: path
        required: true
    get:
      summary: Récupère un auteur spécifique
      tags:
        - auteurs
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      operationId: get-auteur-by-id
    patch:
      summary: Met à jour un auteur spécifique
      operationId: patch-auteur-by-id
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auteur'
    delete:
      summary: Supprime un auteur spécifique
      operationId: delete-auteur-by-id
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
  /auteurs/new:
    post:
      summary: Ajoute un nouvel auteur
      operationId: post-new-auteur
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Utilisateur'
      tags:
        - auteurs
  '/emprunts/start/{idExemplaire}':
    parameters:
      - schema:
          type: string
        name: idExemplaire
        in: path
        required: true
    post:
      summary:
      tags: []
      responses: {}
      operationId: post-emprunt-start
  '/emprunts/return/{idExemplaire}':
    parameters:
      - schema:
          type: string
        name: idExemplaire
        in: path
        required: true
    post:
      summary:
      tags: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      operationId: post-emprunt-return
components:
  schemas:
    Utilisateur:
      title: Utilisateur
      type: object
      x-tags:
        - utilisateurs
      properties:
        id:
          type: integer
        emailUtilisateur:
          type: string
        mdpUtilisateur:
          type: string
        nomUtilisateur:
          type: string
        prenomUtilisateur:
          type: string
        adresseUtilisateur:
          type: string
        numTelephoneUtilisateur:
          type: string
        dateNaissanceUtilisateur:
          type: string
        typeProfilUtilisateur:
          type: string
    Media:
      title: Media
      type: object
      x-tags:
        - medias
      properties:
        id:
          type: integer
        titre:
          type: string
        idType:
          type: integer
        idGenre:
          type: integer
        anneePublicationSortie:
          type: integer
        note:
          type: number
        img:
          type: string
    GenreMedia:
      title: Genre
      type: object
      x-tags:
        - medias
      properties:
        id:
          type: integer
        designation:
          type: string
    TypeMedia:
      title: Type
      type: object
      x-tags:
        - medias
      properties:
        id:
          type: integer
        designationType:
          type: string
        designationAuteur:
          type: string
    NationaliteAuteur:
      title: NationaliteAuteur
      type: object
      x-tags:
        - auteurs
      properties:
        id:
          type: integer
        designation:
          type: string
    Auteur:
      title: Auteur
      type: object
      x-tags:
        - auteurs
      properties:
        id:
          type: integer
        nom:
          type: string
        prenom:
          type: string
        nationalite:
          type: integer
    ConnexionForm:
      title: ConnexionForm
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      x-tags:
        - connexion
    ExemplaireMedia:
      title: ExemplaireMedia
      type: object
      properties:
        id:
          type: integer
        idMedia:
          type: integer
    Emprunt:
      title: Emprunt
      type: object
      properties:
        idExemplaire:
          type: integer
        idUtilisateur:
          type: integer
        dateReservation:
          type: string
        dateEmprunt:
          type: string
        dateRetourPrevue:
          type: string
        dateRetourReelle:
          type: string
  securitySchemes: {}
